@model IEnumerable<EventShopApp.ViewModels.CartItemViewModel>

<h2>Your Cart</h2>

@if (!Model.Any())
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Item</th>
                <th>Type</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th> 
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img src="@item.ImageUrl" alt="@item.Name" width="50" />
                        <span>@item.Name</span>
                    </td>
                    <td>@item.ItemType</td>
                    <td>@item.Price.ToString("C")</td>
                    <td>@item.Quantity</td>
                    <td>@item.TotalPrice.ToString("C")</td>
                    <td>
                        <button onclick="removeFromCart(@item.Id)" class="btn btn-danger btn-sm">Remove</button> <!-- Remove button -->
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="cart-actions">
        <a asp-action="ClearCart" class="btn btn-danger">Empty Cart</a>
        <a asp-action="Order" class="btn btn-primary">Order</a> <!-- Order Button -->
    </div>
}

<script>
    function removeFromCart(itemId) {
        fetch(`/Cart/RemoveFromCart/${itemId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
               
                location.reload(); // Reload page to update cart view
            } else {
                alert("Failed to remove item from cart.");
            }
        })
        .catch(error => console.error('Error:', error));
    }
</script>

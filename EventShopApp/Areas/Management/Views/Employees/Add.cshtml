@model EventShopApp.Models.Employee

<h2>Add Employee</h2>
<form asp-action="Add" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label for="Name">Name</label>
        <input asp-for="Name" id="Name" class="form-control" name="Name" required />
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="Surname">Surname (optional)</label>
        <input asp-for="Surname" id="Surname" class="form-control" name="Surname" />
        @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <input asp-for="Email" id="Email" class="form-control" name="Email" required />
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="PhoneNumber">Phone Number</label>
        <input asp-for="PhoneNumber" id="PhoneNumber" class="form-control" name="PhoneNumber" required />
        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="Role">Role</label>
        <select asp-for="Role" id="Role" class="form-control" name="Role">
            @foreach (var role in Enum.GetValues(typeof(EventShopApp.Enums.EmployeeRole)))
            {
                <option value="@role">@role</option>
            }
        </select>
        @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="TemporaryPassword">Temporary Password</label>
        <input type="text" id="TemporaryPassword" name="TemporaryPassword" class="form-control" value="Default@123" required />
        <small class="text-muted">You can change this if needed.</small>
    </div>
    <button type="submit" class="btn btn-primary">Add Employee</button>
</form>
